
@model DashboardViewModel
@{
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}
<style>
    h1 {
        text-align: center; 
        margin-bottom: 20px; 
    }
</style>
<div class="row">
    <!-- Statistics Section -->
    <div class="col-md-4 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <p class="card-title">Key Statistics</p>
                <div class="statistics">
                    <div class="stat-item">
                        <p>Total Registered Members: @Model.RegisteredMembersCount</p>
                    </div>
                    <div class="stat-item">
                        <p>Active Subscriptions: @Model.ActiveSubscriptionsCount</p>
                    </div>
                    <div class="stat-item">
                        <p>Total Revenue: @Model.TotalRevenue</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div>
        <h1>Annual amount</h1>
        <canvas id="annualChart"></canvas>
        <h1>monthly amount</h1>

        <canvas id="monthlyChart"></canvas>
        <h1>Top plans frequantly</h1>

        <canvas id="topPlansChart"></canvas>
        <h1>plans have  amount</h1>

        <canvas id="paymentsChart"></canvas>
        <canvas id="usersChart"></canvas>
        <canvas id="testimonialsChart"></canvas>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Monthly Subscription Report (Line Chart)
        const monthlyLabels = @Html.Raw(Json.Serialize(Model.MonthlySubscriptionReport.Select(item => $"{item.Month}-{item.Year}")));
        const monthlyData = @Html.Raw(Json.Serialize(Model.MonthlySubscriptionReport.Select(item => item.TotalAmount)));
        const monthlyChartConfig = {
            type: 'line',
            data: {
                labels: monthlyLabels,
                datasets: [{
                    label: 'Monthly Revenue',
                    data: monthlyData,
                    fill: false,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1,
                    tension: 0.1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'top' },
                    title: { display: true, text: 'Monthly Subscription Revenue' }
                },
                scales: {
                    x: { beginAtZero: true },
                    y: { beginAtZero: true }
                }
            }
        };
        const monthlyCtx = document.getElementById('monthlyChart').getContext('2d');
        new Chart(monthlyCtx, monthlyChartConfig);

        // Annual Subscription Report (Bar Chart)
        const annualLabels = @Html.Raw(Json.Serialize(Model.AnnualSubscriptionReport.Select(item => item.Year)));
        const annualData = @Html.Raw(Json.Serialize(Model.AnnualSubscriptionReport.Select(item => item.TotalAmount)));
        const annualChartConfig = {
            type: 'bar',
            data: {
                labels: annualLabels,
                datasets: [{
                    label: 'Annual Revenue',
                    data: annualData,
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'top' },
                    title: { display: true, text: 'Annual Subscription Revenue' }
                },
                scales: {
                    x: { beginAtZero: true },
                    y: { beginAtZero: true }
                }
            }
        };
        const annualCtx = document.getElementById('annualChart').getContext('2d');
        new Chart(annualCtx, annualChartConfig);

        // Top Plans Report (Pie Chart)
        const topPlansLabels = @Html.Raw(Json.Serialize(Model.Item1
            .Select(item => item.Title)));
        const topPlansData = @Html.Raw(Json.Serialize(Model.Item1.Select(item => item.Price)));
        const topPlansChartConfig = {
            type: 'pie',
            data: {
                labels: topPlansLabels,
                datasets: [{
                    label: 'Top Plans',
                    data: topPlansData,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'top' },
                    title: { display: true, text: 'Top Plans' }
                }
            }
        };
        const topPlansCtx = document.getElementById('topPlansChart').getContext('2d');
        new Chart(topPlansCtx, topPlansChartConfig);

        // Payments Report (Doughnut Chart)
        const paymentsLabels = @Html.Raw(Json.Serialize(Model.Item2.Select(item => item.Plan.Title)));
        const paymentsData = @Html.Raw(Json.Serialize(Model.Item2.Select(item => item.Amount)));
        const paymentsChartConfig = {
            type: 'doughnut',
            data: {
                labels: paymentsLabels,
                datasets: [{
                    label: 'Payments',
                    data: paymentsData,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'top' },
                    title: { display: true, text: 'Payments' }
                }
            }
        };
        const paymentsCtx = document.getElementById('paymentsChart').getContext('2d');
        new Chart(paymentsCtx, paymentsChartConfig);

        
    
    });
</script>

<div class="row">
    <!-- Top Plans Table -->
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <p class="card-title mb-0">Top Plans</p>
                <div class="table-responsive">
                    <table class="table table-striped table-borderless">
                        <thead>
                            <tr>
                                <th>Plan Title</th>
                                <th>Price</th>
                                <th>Trainer Name</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Item1)
                            {
                                <tr>
                                    <td>@item.Title</td>
                                    <td class="font-weight-bold">@item.Price</td>
                                    <td>@item.Trainer.UserName</td>
                                    <td class="font-weight-medium">
                                        <div class="badge badge-success">@item.Descriptions</div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Testimonials Table -->
    <div class="col-md-7 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <p class="card-title mb-0">Testimonials</p>
                <div class="table-responsive">
                    <table class="table table-striped table-borderless">
                        <thead>
                            <tr>
                                <th>Title</th>
                                <th>Rate</th>
                                <th>User Name</th>
                                <th>Created Time</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Item4)
                            {
                                <tr>
                                    <td>@item.Text</td>
                                    <td class="font-weight-bold">@item.Rate</td>
                                    <td class="font-weight-medium">
                                        <div class="badge badge-success">@item.User.UserName</div>
                                    </td>
                                    <td>@item.RatedTime</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Payments Table -->
    <div class="col-md-4 stretch-card grid-margin">
        <div class="card">
            <div class="card-body">
                <p class="card-title mb-0">Payments</p>
                <div class="table-responsive">
                    <table class="table table-borderless">
                        <thead>
                            <tr>
                                <th class="pl-0 pb-2 border-bottom">Amount</th>
                                <th class="border-bottom pb-2">Plan Title</th>
                                <th class="border-bottom pb-2">Username</th>
                                <th class="border-bottom pb-2">IsUsedPromo</th>
                                <th class="border-bottom pb-2">TransactionDate</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Item2)
                            {
                                <tr>
                                    <td class="pl-0">@item.Amount</td>
                                    <td>@item.Plan.Title</td>
                                    <td>@item.User.UserName</td>
                                    <td>@item.IsUsedPromo</td>
                                    <td>@item.TransactionDate</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Users Table -->
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <p class="card-title">Users Table</p>
                <div class="row">
                    <div class="col-12">
                        <div class="table-responsive">
                            <table id="example" class="display expandable-table" style="width:100%">
                                <thead>
                                    <tr>
                                        <th>Email</th>
                                        <th>Image</th>
                                        <th>User Name</th>
                                        <th>Role Name</th>
                                        <th>Is Blocked</th>
                                        <th>Created Time</th>
                                        <th>Updated Time</th>
                                        <th>Last Login</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Item3)
                                    {
                                        <tr>
                                            <td>@item.Email</td>
                                            <td>
                                                <img src="@Url.Content("~/Images/" + item.UserImage)" style="border-radius:20%;" width="100" height="100" />
                                            </td>
                                            <td>@item.UserName</td>
                                            <td>@item.Role</td>
                                            <td>@item.Isblock</td>
                                            <td>@item.CreatedAt</td>
                                            <td>@item.UpdateAt</td>
                                            <td>@item.LastLogin</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Include Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
